// Generated by CoffeeScript 1.6.3
(function() {
  var file, files, firstLine, fs, git, logCommit, node_modules, p1, p2, p3, path, project, repo, root, stats, _i, _len;

  fs = require('fs');

  path = require('path');

  git = require('git-node');

  root = '../voxpopuli';

  node_modules = path.join(root, 'node_modules');

  files = fs.readdirSync(node_modules);

  console.log(files);

  for (_i = 0, _len = files.length; _i < _len; _i++) {
    file = files[_i];
    p1 = path.join(node_modules, file);
    stats = fs.lstatSync(p1);
    if (!stats.isSymbolicLink()) {
      continue;
    }
    p2 = fs.readlinkSync(p1);
    p3 = fs.readlinkSync(p2);
    project = p3;
    repo = git.repo(path.join(p3, '.git'));
    console.log(p3, repo);
    repo.logWalk('HEAD', function(err, log) {
      var onRead;
      if (err) {
        throw err;
      }
      onRead = function(err, commit) {
        if (err) {
          throw err;
        }
        if (!commit) {
          return;
        }
        logCommit(project, commit);
        return repo.treeWalk(commit.tree, function(err, tree) {
          var onEntry;
          if (err) {
            throw err;
          }
          onEntry = function(err, entry) {
            if (err) {
              throw err;
            }
            if (!entry) {
              return log.read(onRead);
            }
            return tree.read(onEntry);
          };
          return tree.read(onEntry);
        });
      };
      return log.read(onRead);
    });
    break;
  }

  logCommit = function(project, commit) {
    return console.log("" + project + "@" + commit.hash + " " + commit.author.name + " " + (firstLine(commit.message)));
  };

  firstLine = function(s) {
    return s.split('\n')[0];
  };

}).call(this);
